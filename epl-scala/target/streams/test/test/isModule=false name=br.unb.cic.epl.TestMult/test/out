[0m[[0m[0minfo[0m] [0m[0m[32mTestMult:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn Mult expression[0m[0m
<<<<<<< HEAD
[0m[[0m[0minfo[0m] [0m[0m[32m- should return String (100 * 200) when we call Mult(Literal(100), Literal(200).print())[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 20000 when we call call Mult(Literal(100), Literal(200)).eval()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 when we call literal300.height[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 3 when we call Mult.height[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 when we call Mult.height[0m[0m
=======
[0m[[0m[0minfo[0m] [0m[0m[32m- should return String (10 * 2) when we call Mult(Literal(10), Literal(2).print())[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 20 when we call call Mult(Literal(10), Literal(2)).eval()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return -4 when we call call Mult(Literal(-2), Literal(2)).eval()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 when we call call Mult(Literal(-2), Literal(0)).eval()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 when we call call Mult(Literal(0), Literal(0)).eval()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 4 when we call call Mult(Literal(-2), Literal(-2)).eval()[0m[0m
>>>>>>> f0c1e4599f094866e93822af669cec730135f034
